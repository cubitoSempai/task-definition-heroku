{"version":3,"sources":["./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/auth/signin/signin.component.ts","./src/app/auth/signin/signin.component.html","./src/environments/environment.ts","./src/app/components/projectlist/projectlist.component.ts","./src/app/components/projectlist/projectlist.component.html","./src/app/components/project/project.component.ts","./src/app/components/project/project.component.html","./src/app/auth/recovery/recovery.component.ts","./src/app/auth/recovery/recovery.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/user.model.ts","./src/app/guards/auth.guard.ts","./src/app/app.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/services/project.service.ts","./src/environments/environment.prod.ts","./src/app/shared/footer/footer.component.ts","./src/app/shared/footer/footer.component.html","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICQ1C,6EAEE;IADiD,wWAAoC;IACrF,uDACA;IAAA,6EACE;IAAA,uEAAM;IAAA,iEAAO;IAAA,4DAAO;IACtB,4DAAS;IACX,4DAAS;;;;IALP,8GAAgD;IAChD,0DACA;IADA,4FACA;;;;IAQJ,sEACE;IAAA,+EACE;IADgB,+XAAuB,CAAC,KAAG;IAC3C,qEAAI;IAAA,kEAAO;IAAA,4DAAK;IAChB,gEACA;IAAA,0EACE;IAAA,4EAAmB;IAAA,gEAAK;IAAA,4DAAQ;IAChC,4EACF;IADwD,0UAAmB;IAAzE,4DACF;IAAA,4DAAM;IACN,2EACE;IAAA,6EAAyB;IAAA,uEAAW;IAAA,4DAAQ;IAC5C,gFAAgG;IAA9C,oVAAyB;IAAU,4DAAW;IAClG,4DAAM;IACN,2EACE;IAAA,8EAA8C;IAAA,kEAAM;IAAA,4DAAS;IAC/D,4DAAM;IACN,sEAAI;IAAA,iEAAK;IAAA,4DAAK;IAChB,4DAAO;IACT,4DAAM;;;IAXsD,0DAAmB;IAAnB,iFAAmB;IAIvB,0DAAyB;IAAzB,uFAAyB;;ADnBhF,MAAM,aAAa;IAUxB,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QARlD,aAAQ,GAAc,EAAE,CAAC;QACzB,UAAK,GAAY,KAAK,CAAC;QACvB,UAAK,GAAW,EAAE,CAAC;QACnB,gBAAW,GAAW,EAAE,CAAC;QAMvB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,QAAQ,KAAU,CAAC;IAEnB,WAAW,CAAC,KAAa;QACvB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;IAED,QAAQ,CAAC,CAAS,EAAE,CAAS;QAC3B,IAAI,CAAC,IAAI,CAAC,EAAE;YACV,IAAI,CAAC,CAAC,KAAK,EAAE;gBACX,IAAI,CAAC,cAAc;qBAChB,aAAa,CAAC;oBACb,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE;iBAC9D,CAAC;qBACD,SAAS,CACR,CAAC,IAAI,EAAE,EAAE,GAAE,CAAC,EACZ,CAAC,GAAG,EAAE,EAAE;oBACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBACjC,CAAC,CACF,CAAC;aACL;SACF;IACH,CAAC;IAED,YAAY;QACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CACzC,CAAC,GAAQ,EAAE,EAAE;YACX,IAAI,GAAG,CAAC,EAAE,EAAE;gBACV,MAAM,UAAU,GAAU,GAAG,CAAC,QAAQ,CAAC;gBACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;iBACnC;aACF;QACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACJ,CAAC;;0EAvDU,aAAa;6FAAb,aAAa;QCV1B,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,qEAAI;QAAA,mEAAQ;QAAA,4DAAK;QACjB,4EAAuE;QAAzB,qIAAS,kBAAc,IAAC;QAAC,kEAA0B;QAAA,4DAAS;QAC5G,4DAAM;QACN,yEACE;QAAA,+GAEE;QAKJ,4DAAM;QAER,4DAAM;QACN,0EACE;QAAA,4GACE;QAkBJ,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAhCwB,0DAAgC;QAAhC,iFAAgC;QAWnD,0DAAa;QAAb,2EAAa;;6FDTX,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAKnB;;;;;;;ICKvB,2EAA4F;IAAA,gFACjF;IAAA,4DAAO;;;IASlB,2EAA+F;IAAA,oGACtE;IAAA,4DAAO;;;IAQhC,2EAAsG;IAAA,oGAE7E;IAAA,4DAAO;;ADnBjC,MAAM,eAAe;IAK1B,YAAoB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAExE,QAAQ,KAAU,CAAC;IAEnB,QAAQ,CAAC,IAAY;QACnB,2BAA2B;QAC3B,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO;SACR;QAED,MAAM,MAAM,GAAQ;YAClB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,eAAe,EAAE,IAAI,CAAC,eAAe;SACtC,CAAC;QAEF,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,qBAAqB;YAC3B,IAAI,EAAE,MAAM;YACZ,iBAAiB,EAAE,KAAK;YACxB,QAAQ,EAAE,GAAG,EAAE;gBACb,kDAAI,CAAC,WAAW,EAAE,CAAC;YACrB,CAAC;SACF,CAAC,CAAC;QAEH,gCAAgC;QAChC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CACvC,CAAC,IAAS,EAAE,EAAE;YACZ,mBAAmB;YACnB,kDAAI,CAAC,IAAI,CAAC;gBACR,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,IAAI,CAAC,OAAO;gBACnB,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;gBACX,SAAS,EAAE,GAAG,EAAE;oBACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBACtC,CAAC;aACF,CAAC,CAAC;QACL,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAE,CAAC;YAEzB,mBAAmB;YACnB,kDAAI,CAAC,IAAI,CACP,OAAO,EACP,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO;gBAChB,CAAC,CAAC,qBAAqB;gBACvB,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EACrB,OAAO,CACR,CAAC;QACJ,CAAC,CACF,CAAC;IACJ,CAAC;;8EA1DU,eAAe;+FAAf,eAAe;;QCZ5B,yEACE;QAAA,yEACE;QAAA,yEAEE;QACA,6EAEE;QAFI,uRAAY,iBAAW,IAAC;QAE5B,oEAEA;QACA,6GAA4F;QAE5F,yEACE;QAAA,2EAGA;QAHkD,kLAAmB,sOAAgB,iBAAW,IAA3B;QAArE,4DAGA;QAAA,qEAAoC;QACtC,4DAAM;QAGN,+GAA+F;QAE/F,2EACE;QAAA,6EAEA;QAFwD,sLAAsB,uOAAgB,iBAAW,IAA3B;QAA9E,4DAEA;QAAA,sEAAoC;QACtC,4DAAM;QAGN,+GAAsG;QAGtG,2EACE;QAAA,6EAEA;QAF+D,6LAA6B,uOAC3E,iBAAW,IADgE;QAA5F,4DAEA;QAAA,sEAAoC;QACtC,4DAAM;QAIN,2EACE;QAAA,8EACE;QAAA,qEACF;QAAA,4DAAS;QACX,4DAAM;QAEN,2EACE;QAAA,8EACE;QAAA,oEAAuC;QAAA,kFACzC;QAAA,4DAAS;QACX,4DAAM;QAGN,2EACE;QAAA,yEACE;QAAA,mEACF;QAAA,4DAAI;QACN,4DAAM;QACR,4DAAO;QAET,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,iEACA;;;QAtDc,0DAAiD;QAAjD,+GAAiD;QAGH,0DAAmB;QAAnB,8EAAmB;QAOjE,0DAAoD;QAApD,kHAAoD;QAGA,0DAAsB;QAAtB,iFAAsB;QAM1E,0DAA2D;QAA3D,yHAA2D;QAIA,0DAA6B;QAA7B,wFAA6B;;6FDrBzF,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEXD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE,4BAA4B;CACvC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAkD;;;;;ICKhD,4EAEE;IAD2C,yWAA8B;IACzE,uDACA;IAAA,4EACE;IAAA,uEAAM;IAAA,iEAAO;IAAA,4DAAO;IACtB,4DAAS;IACX,4DAAS;;;;IALP,wGAA0C;IAC1C,0DACA;IADA,sFACA;;ADDG,MAAM,oBAAoB;IAG/B;QADA,aAAQ,GAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACjB,CAAC;IAEhB,QAAQ,KAAU,CAAC;IAEnB,WAAW,CAAC,OAAe;QACzB,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;IAC/B,CAAC;;wFATU,oBAAoB;oGAApB,oBAAoB;QCPjC,yEACE;QAAA,qEAAI;QAAA,mEAAQ;QAAA,4DAAK;QACjB,4EAA8C;QAAA,kEAA0B;QAAA,4DAAS;QACnF,4DAAM;QACN,yEACE;QAAA,sHAEE;QAKJ,4DAAM;;QAPkB,0DAAgC;QAAhC,iFAAgC;;6FDE3C,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,gBAAgB;IAC3B,gBAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;IAEnB,UAAU,KAAU,CAAC;;gFALV,gBAAgB;gGAAhB,gBAAgB;QCP7B,uEACE;QAAA,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QAChB,gEACA;QAAA,yEACE;QAAA,2EAAmB;QAAA,gEAAK;QAAA,4DAAQ;QAChC,sEACF;QAAA,4DAAM;QACN,yEACE;QAAA,2EAAyB;QAAA,uEAAW;QAAA,4DAAQ;QAC5C,0EAAoE;QACtE,4DAAM;QAON,0EACE;QAAA,6EAAqE;QAAvB,yIAAS,gBAAY,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACtF,4DAAM;QACR,4DAAO;;6FDbM,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGnB;;;;;;;ICavB,4EAAkE;IAAA,sFAC1D;IAAA,4DAAQ;;ADNjB,MAAM,iBAAiB;IAE5B,YAAoB,IAAiB,EAAU,MAAc;QAAzC,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEjE,QAAQ,KAAU,CAAC;IAEnB,MAAM,CAAC,IAAY;QACjB,2BAA2B;QAC3B,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,aAAa;gBACpB,IAAI,EAAE,wCAAwC;gBAC9C,IAAI,EAAE,MAAM;gBACZ,iBAAiB,EAAE,KAAK;gBACxB,QAAQ,EAAE,GAAG,EAAE;oBACb,kDAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC;aACF,CAAC,CAAC;YAEH,2CAA2C;YAC3C,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAC3C,CAAC,IAAS,EAAE,EAAE;gBACZ,IAAI,IAAI,EAAE;oBACR,mBAAmB;oBACnB,kDAAI,CAAC,IAAI,CAAC;wBACR,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,0BAA0B;wBACjC,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;wBACX,SAAS,EAAE,GAAG,EAAE;4BACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;wBACtC,CAAC;qBACF,CAAC,CAAC;iBACJ;YACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;gBACN,kDAAI,CAAC,IAAI,CACP,OAAO,EACP,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO;oBACpB,CAAC,CAAC,qBAAqB;oBACvB,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EACzB,OAAO,CACR,CAAC;YACJ,CAAC,CACF,CAAC;SACH;IACH,CAAC;;kFA9CU,iBAAiB;iGAAjB,iBAAiB;;QCX9B,yEACE;QAAA,yEACE;QAAA,yEAEE;QACA,6EACE;QADiF,yRAAY,eAAY,IAAC;QAC1G,oEAEA;QAAA,2EAAqB;QAAA,kFAAkB;QAAA,4DAAQ;QAC/C,yEACE;QAAA,2EAEA;QAFO,qLAAoB;QAA3B,4DAEA;QAAA,sEAAoC;QACtC,4DAAM;QAGN,oHAAkE;QAGlE,2EACE;QAAA,8EACE;QAAA,uEACF;QAAA,4DAAS;QACX,4DAAM;QAEN,2EACE;QAAA,yEACE;QAAA,6FACF;QAAA,4DAAI;QACN,4DAAM;QAER,4DAAO;QAGT,4DAAM;QACR,4DAAM;QACR,4DAAM;;;QA1BW,0DAAoB;QAApB,+EAAoB;QAMtB,0DAAsC;QAAtC,8FAAsC;;6FDLxC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;KACpB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;6FDOlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAO,MAAM,IAAI;IACf,YACS,KAAa,EACb,QAAgB,EAChB,KAAc,EACd,EAAW;QAHX,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAQ;QAChB,UAAK,GAAL,KAAK,CAAS;QACd,OAAE,GAAF,EAAE,CAAS;IACjB,CAAC;CACL;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAIN;;;;AAK9B,MAAM,SAAS;IACpB,YAAoB,KAAkB,EAAU,MAAc;QAA1C,UAAK,GAAL,KAAK,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAElE,WAAW;QACT,qDAAqD;QACrD,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,IAAI,CACnC,0DAAG,CAAC,CAAC,cAAc,EAAE,EAAE;YACrB,qDAAqD;YACrD,IAAI,CAAC,cAAc,EAAE;gBACnB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;kEAbU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;6FAEP,SAAS;cAHrB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACe;AACX;AACW;AACuB;AAEhC;AACe;AACS;AACJ;AACF;AACL;AAC0B;AACZ;;AAwBnE,MAAM,SAAS;;wFAAT,SAAS,cAHR,2DAAY;4IAGb,SAAS,mBAJT,EAAE,YAPJ;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,qEAAgB;YAChB,4FAAuB;SACxB;mIAKU,SAAS,mBApBlB,2DAAY;QACZ,0EAAc;QACd,mFAAiB;QACjB,+EAAe;QACf,8EAAe;QACf,yEAAa;QACb,mGAAoB;QACpB,uFAAgB,aAGhB,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,qEAAgB;QAChB,4FAAuB;6FAMd,SAAS;cAtBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,0EAAc;oBACd,mFAAiB;oBACjB,+EAAe;oBACf,8EAAe;oBACf,yEAAa;oBACb,mGAAoB;oBACpB,uFAAgB;iBACjB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,qEAAgB;oBAChB,4FAAuB;iBACxB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;gBACzB,OAAO,EAAE,EAAE;aACZ;;;;;;;;;;;;;;ACrCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAInB;;;;;;;ICMvB,2EAA4F;IAAA,gFACjF;IAAA,4DAAO;;;IASlB,2EAA+F;IAAA,oGACtE;IAAA,4DAAO;;ADPjC,MAAM,cAAc;IAKzB,YAAoB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAFpE,eAAU,GAAG,KAAK,CAAC;IAEoD,CAAC;IAExE,QAAQ;QACN,IAAI,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACjC,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;QAED,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ,CAAC,IAAY;QAEnB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO;SACR;QAED,MAAM,KAAK,GAAQ;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QAEF,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,qBAAqB;YAC3B,IAAI,EAAE,MAAM;YACZ,iBAAiB,EAAE,KAAK;YACxB,QAAQ,EAAE,GAAG,EAAE;gBACb,kDAAI,CAAC,WAAW,EAAE,CAAC;YACrB,CAAC;SACF,CAAC,CAAC;QAGH,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAC3C,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3C;YAED,kDAAI,CAAC,IAAI,CAAC;gBACR,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,IAAI,CAAC,OAAO;gBACnB,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;gBACX,SAAS,EAAE,GAAG,EAAE;oBACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBACrC,CAAC;aACF,CAAC,CAAC;QACL,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,kDAAI,CAAC,IAAI,CACP,OAAO,EACP,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO;gBAChB,CAAC,CAAC,qBAAqB;gBACvB,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EACrB,OAAO,CACR,CAAC;QACJ,CAAC,CACF,CAAC;IACJ,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;SAClC;QACD,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;;4EAvEU,cAAc;8FAAd,cAAc;;QCd3B,yEACE;QAAA,yEACE;QAAA,yEAEE;QACA,6EAEE;QAFI,sRAAY,iBAAW,IAAC;QAE5B,oEAEA;QACA,4GAA4F;QAE5F,yEACE;QAAA,2EAGA;QAHkD,iLAAmB,qOAAgB,iBAAW,IAA3B;QAArE,4DAGA;QAAA,qEAAoC;QACtC,4DAAM;QAGN,8GAA+F;QAE/F,2EACE;QAAA,6EAEA;QAFwD,qLAAsB,sOAAgB,iBAAW,IAA3B;QAA9E,4DAEA;QAAA,sEAAoC;QACtC,4DAAM;QAGN,2EACE;QAAA,2EACE;QAAA,6EAEA;QAFiC,uLAAwB,gFAAU,sBAAkB,IAA5B;QAAzD,4DAEA;QAAA,6EACE;QAAA,+EACF;QAAA,4DAAQ;QACV,4DAAM;QACR,4DAAM;QAGN,2EACE;QAAA,8EACE;QAAA,oEACF;QAAA,4DAAS;QACX,4DAAM;QAEN,2EACE;QAAA,8EACE;QAAA,oEAAuC;QAAA,iFACzC;QAAA,4DAAS;QACX,4DAAM;QAGN,2EACE;QAAA,yEACE;QAAA,qEACF;QAAA,4DAAI;QACJ,yEACE;QAAA,yFACF;QAAA,4DAAI;QACN,4DAAM;QACR,4DAAO;QAGT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,iEACA;;;QA1Dc,0DAAiD;QAAjD,+GAAiD;QAGH,0DAAmB;QAAnB,8EAAmB;QAOjE,0DAAoD;QAApD,kHAAoD;QAGA,0DAAsB;QAAtB,iFAAsB;QAQ3C,0DAAwB;QAAxB,mFAAwB;;6FDjBxD,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAIuB;;;;AAElE,MAAM,QAAQ,GAAW,0EAAW,CAAC,QAAQ,CAAC;AAKvC,MAAM,cAAc;IACzB,YAAoB,IAAgB,EAAU,WAAwB;QAAlD,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAE1E,aAAa,CAAC,OAAY;QACxB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,uBAAuB,EAAE,OAAO,EAAE;YACjE,OAAO,EAAE;gBACP,SAAS,EAAE,KAAK;aACjB;SACF,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,qBAAqB,EAAE;YACrD,OAAO,EAAE;gBACP,SAAS,EAAE,KAAK;aACjB;SACF,CAAC,CAAC;IACL,CAAC;;4EAnBU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAO,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;IAChB,QAAQ,EAAE,mDAAmD;CAC9D,CAAC;;;;;;;;;;;;;ACHF;AAAA;AAAA;AAAkD;;AAO3C,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,oEAAG;QAAA,wEAAa;QAAA,4DAAI;;6FDOP,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACL;AACgB;AAGY;AACtB;;;AAE5C,MAAM,QAAQ,GAAW,0EAAW,CAAC,QAAQ,CAAC;AAIvC,MAAM,WAAW;IAGtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,WAAW,CAAC,KAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,YAAY,EAAE,KAAK,CAAC,CAAC,IAAI,CACxD,0DAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YACX,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,MAAM;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,aAAa,EAAE,MAAM,CAAC,CAAC;IAC1D,CAAC;IAED,YAAY,CAAC,KAAa;QACxB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,GAAG,QAAQ,mBAAmB,EAAE,EAAE,KAAK,EAAE,CAAC;aAC/C,IAAI,CAAC,0DAAG,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,YAAY;QACV,MAAM,KAAK,GAAW,IAAI,CAAC,SAAS,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,QAAQ,iBAAiB,EAAE;YACjC,OAAO,EAAE;gBACP,SAAS,EAAE,KAAK;aACjB;SACF,CAAC;aACD,IAAI,CACH,0DAAG,CAAC,CAAC,IAAS,EAAE,EAAE;YAChB,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;YAE3C,IAAI,CAAC,YAAY,GAAG,IAAI,uDAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAE/D,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC,EACF,0DAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EACnB,iEAAU,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,OAAO,+CAAE,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,SAAS;QACP,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;YACxC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;YAC/B,CAAC,CAAC,EAAE,CAAC;QACP,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;;sEApDU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACO;AACS;AACN;AACjB;AACY;;;AAE5D,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0EAAc,EAAE;IACvC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,0EAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,mFAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,6EAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,wEAAa,EAAE,WAAW,EAAE,CAAC,4DAAS,CAAC,EAAE;CAErE,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,EAChD,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC1D,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ProjectService } from '../../services/project.service';\nimport { Project } from '../../models/project.model';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  activeProyect: string;\n  projects: Project[] = [];\n  crear: boolean = false;\n  title: string = '';\n  description: string = '';\n  deadline: Date;\n  status: boolean;\n  commentary: string[];\n\n  constructor(private projectService: ProjectService) {\n    this.loadProjects();\n  }\n\n  ngOnInit(): void {}\n\n  showProyect(title: string): void {\n    this.activeProyect = title;\n  }\n\n  onSubmit(f: NgForm, i: number): void {\n    if (i == 1) {\n      if (f.valid) {\n        this.projectService\n          .createProject({\n            project: { title: this.title, description: this.description },\n          })\n          .subscribe(\n            (resp) => {},\n            (err) => {\n              console.log(err.error.message);\n            }\n          );\n      }\n    }\n  }\n\n  createActive() {\n    this.crear = true;\n  }\n\n  loadProjects(): any {\n    this.projectService.getProjects().subscribe(\n      (res: any) => {\n        if (res.ok) {\n          const projectsDB: any[] = res.projects;\n          for (let i = 0; i < projectsDB.length; i++) {\n            this.projects.push(projectsDB[i]);\n          }\n        }\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-2\">\n      <div class=\"header\">\n        <h3>Proyects</h3>\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"createActive()\"><i class=\"fa fa-plus\"></i></button>\n      </div>\n      <div class=\"list-group\">\n        <button type=\"button\" *ngFor=\"let project of projects\" class=\"list-group-item list-group-item-action\"\n          [class.active]=\"activeProyect === project.title\" (click)=\"showProyect(project.title)\">\n          {{project.title}}\n          <button type=\"button\" class=\"close cursor\">\n            <span>&times;</span>\n          </button>\n        </button>\n      </div>\n\n    </div>\n    <div class=\"col-9\">\n      <div *ngIf=\"crear\">\n        <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f,1);\">\n          <h2>Project</h2>\n          <hr>\n          <div class=\"form-group\">\n            <label for=\"title\">Title</label>\n            <input type=\"email\" class=\"form-control\" name=\"title\" [(ngModel)]=\"title\" placeholder=\"\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"description\">Description</label>\n            <textarea class=\"form-control\" name=\"description\" [(ngModel)]=\"description\" rows=\"3\"></textarea>\n          </div>\n          <div class=\"text-center mt-5\">\n            <button type=\"submit\" class=\"btn btn-success\">Create</button>\n          </div>\n          <h2>Tasks</h2>\n        </form>\n      </div>\n\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from '../../models/user.model';\nimport { AuthService } from '../../services/auth.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css'],\n})\nexport class SigninComponent implements OnInit {\n  email: string;\n  password: string;\n  confirmPassword: string;\n  login: User;\n  constructor(private router: Router, private authServise: AuthService) {}\n\n  ngOnInit(): void {}\n\n  onSubmit(form: NgForm): void {\n    // Validación de formulario\n    if (form.invalid) {\n      return;\n    }\n\n    const signIn: any = {\n      email: this.email,\n      password: this.password,\n      confirmPassword: this.confirmPassword,\n    };\n\n    Swal.fire({\n      title: 'Loading',\n      text: 'verifying your data',\n      icon: 'info',\n      showConfirmButton: false,\n      willOpen: () => {\n        Swal.showLoading();\n      },\n    });\n\n    // Petición para validar usuario\n    this.authServise.signIn(signIn).subscribe(\n      (resp: any) => {\n        // En caso de éxito\n        Swal.fire({\n          icon: 'success',\n          title: resp.message,\n          showConfirmButton: false,\n          timer: 1500,\n          willClose: () => {\n            this.router.navigateByUrl('/login');\n          },\n        });\n      },\n      (err) => {\n        console.log('err', err );\n\n        // En caso de éxito\n        Swal.fire(\n          'error',\n          !err.error.message\n            ? 'Something its wrong'\n            : err.error.message,\n          'error'\n        );\n      }\n    );\n  }\n}\n","<div class=\"limiter animated fadeInLeft\">\n  <div class=\"container-login100\">\n    <div class=\"wrap-login100 p-t-50 p-b-90\">\n\n      <!-- inicio form -->\n      <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\" class=\"login100-form validate-form flex-sb flex-w fadeInLeft\">\n\n        <img src=\"../../../assets/images/task_logo.png\" alt=\"task_logo\" class=\"img-fluid\">\n\n        <!-- Mensaje de error  -->\n        <span *ngIf=\"f.submitted && f.controls['email'].errors\" class=\"text-danger animated fadeIn\">the mail is\n          mandatory</span>\n        <div class=\"wrap-input100 m-b-16\">\n          <input class=\"input100\" type=\"email\" name=\"email\" [(ngModel)]=\"email\" (keyup.enter)=\"onSubmit(f)\"\n            placeholder=\"Email\" required>\n\n          <span class=\"focus-input100\"></span>\n        </div>\n\n        <!-- Mensaje de error  -->\n        <span *ngIf=\"f.submitted && f.controls['password'].errors\" class=\"text-danger animated fadeIn\">the password must\n          have at least 6 letters</span>\n        <div class=\"wrap-input100 m-b-16\" data-validate=\"Password is required\">\n          <input class=\"input100\" type=\"password\" name=\"password\" [(ngModel)]=\"password\" (keyup.enter)=\"onSubmit(f)\"\n            placeholder=\"Password\" minlength=\"6\" required>\n          <span class=\"focus-input100\"></span>\n        </div>\n\n        <!-- Mensaje de error  -->\n        <span *ngIf=\"f.submitted && f.controls['confirmPassword'].errors\" class=\"text-danger animated fadeIn\">the\n          password must\n          have at least 6 letters</span>\n        <div class=\"wrap-input100 m-b-16\" data-validate=\"Password is required\">\n          <input class=\"input100\" type=\"password\" name=\"confirmPassword\" [(ngModel)]=\"confirmPassword\"\n            (keyup.enter)=\"onSubmit(f)\" placeholder=\"Confirm password\" minlength=\"6\" required>\n          <span class=\"focus-input100\"></span>\n        </div>\n\n\n\n        <div class=\"container-login100-form-btn m-t-17\">\n          <button class=\"login100-form-btn\" type=\"submit\">\n            sign up\n          </button>\n        </div>\n\n        <div class=\"container-login100-form-btn m-t-17\">\n          <button class=\"login100-form-btn facebook\" type=\"submit\">\n            <i class=\"fa fa-facebook-f m-r-60\"></i>sign in with facebook\n          </button>\n        </div>\n\n        <!-- recuperar datos -->\n        <div id=\"container_options\">\n          <a routerLink=\"/login\" class=\"txt1\">\n            Login\n          </a>\n        </div>\n      </form> <!-- fin form -->\n\n    </div>\n  </div>\n</div>\ns\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  base_url: 'http://localhost:3000/api/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-projectlist',\n  templateUrl: './projectlist.component.html',\n  styleUrls: ['./projectlist.component.css'],\n})\nexport class ProjectlistComponent implements OnInit {\n  activeProyect: string;\n  proyects: string[] = ['a', 'b'];\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  showProyect(proyect: string): void {\n    this.activeProyect = proyect;\n  }\n}\n","<div class=\"header\">\n  <h3>Proyects</h3>\n  <button type=\"button\" class=\"btn btn-success\"><i class=\"fa fa-plus\"></i></button>\n</div>\n<div class=\"list-group\">\n  <button type=\"button\" *ngFor=\"let proyect of proyects\" class=\"list-group-item list-group-item-action\"\n    [class.active]=\"activeProyect === proyect\" (click)=\"showProyect(proyect)\">\n    {{proyect}}\n    <button type=\"button\" class=\"close cursor\">\n      <span>&times;</span>\n    </button>\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgModel } from '@angular/forms';\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css'],\n})\nexport class ProjectComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  timeChange(): void {}\n}\n","<form>\n  <h2>Project</h2>\n  <hr>\n  <div class=\"form-group\">\n    <label for=\"title\">Title</label>\n    <input type=\"email\" class=\"form-control\" id=\"title\" placeholder=\"\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"description\">Description</label>\n    <textarea class=\"form-control\" id=\"description\" rows=\"3\"></textarea>\n  </div>\n  <!-- <h2>Tasks</h2>\n  <hr>\n  <div class=\"form-group\">\n    <label for=\"description\">Comemntary</label>\n    <textarea class=\"form-control\" id=\"description\" rows=\"3\"></textarea>\n  </div> -->\n  <div class=\"text-center mt-5\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"timeChange()\">Create</button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-recovery',\n  templateUrl: './recovery.component.html',\n  styleUrls: ['./recovery.component.css'],\n})\nexport class RecoveryComponent implements OnInit {\n  correo: string;\n  constructor(private auth: AuthService, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  enviar(form: NgForm): void {\n    // Validación de formulario\n    if (form.valid) {\n      Swal.fire({\n        title: 'Cargando...',\n        text: 'Estamos validando los datos ingresados',\n        icon: 'info',\n        showConfirmButton: false,\n        willOpen: () => {\n          Swal.showLoading();\n        },\n      });\n\n      // Petición para validar datos y actualizar\n      this.auth.recoveryData(this.correo).subscribe(\n        (resp: any) => {\n          if (resp) {\n            // En caso de éxito\n            Swal.fire({\n              icon: 'success',\n              title: 'All ok, check your email',\n              showConfirmButton: false,\n              timer: 1500,\n              willClose: () => {\n                this.router.navigateByUrl('/login');\n              },\n            });\n          }\n        },\n        (err) => {\n          Swal.fire(\n            'error',\n            !err.error.err.message\n              ? 'Something its wrong'\n              : err.error.err.message,\n            'error'\n          );\n        }\n      );\n    }\n  }\n}\n","<div class=\"limiter animated fadeInLeft\">\n  <div class=\"container-login100\">\n    <div class=\"wrap-login100 p-t-50 p-b-90\">\n\n      <!-- Inicio formulario -->\n      <form class=\"login100-form validate-form flex-sb flex-w fadeInLeft\" #form=\"ngForm\" (ngSubmit)=\"enviar(form)\">\n        <img src=\"../../../assets/images/task_logo.png\" alt=\"Logo-PazRed\" class=\"img-fluid\">\n\n        <label class=\"label\">Correo electrónico</label>\n        <div class=\"wrap-input100 m-b-16\">\n          <input [(ngModel)]=\"correo\" class=\"input100\" type=\"text\" name=\"correo\"\n            placeholder=\"Ingrese su correo electronico\" required pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$\">\n          <span class=\"focus-input100\"></span>\n        </div>\n\n        <!-- Error por formato -->\n        <small *ngIf=\"form.submitted && form.invalid\" class=\"text-danger\">Formato de correo no\n          valido</small>\n\n        <div class=\"container-login100-form-btn m-t-17\">\n          <button class=\"login100-form-btn\" type=\"submit\">\n            Recuperar\n          </button>\n        </div>\n\n        <div id=\"container_options\">\n          <a routerLink=\"/login\" class=\"txt1 mt-5\">\n            volver al inicio de sesión\n          </a>\n        </div>\n\n      </form>\n      <!-- Fin formulario -->\n\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<router-outlet></router-outlet>\n","export class User {\r\n  constructor(\r\n    public email: string,\r\n    public password: string,\r\n    public token?: string,\r\n    public id?: string\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private login: AuthService, private router: Router) {}\n\n  canActivate(): Observable<boolean> {\n    // validación de usuario logueado por medio del token\n    return this.login.validarToken().pipe(\n      tap((isAutenticated) => {\n        // En caso de no tener token se redirecciona al login\n        if (!isAutenticated) {\n          this.router.navigateByUrl('/login');\n        }\n      })\n    );\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { RecoveryComponent } from './auth/recovery/recovery.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { SigninComponent } from './auth/signin/signin.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { ProjectlistComponent } from './components/projectlist/projectlist.component';\nimport { ProjectComponent } from './components/project/project.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RecoveryComponent,\n    FooterComponent,\n    SigninComponent,\n    HomeComponent,\n    ProjectlistComponent,\n    ProjectComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  exports: [],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport Swal from 'sweetalert2';\n\nimport { User } from '../../models/user.model';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  email: string;\n  password: string;\n  rememberMe = false;\n  login: User;\n  constructor(private router: Router, private authServise: AuthService) {}\n\n  ngOnInit(): void {\n    if (localStorage.getItem('email')) {\n      this.email = localStorage.getItem('email');\n      this.rememberMe = true;\n    }\n\n    localStorage.removeItem('token');\n  }\n\n  onSubmit(form: NgForm): void {\n    \n    if (form.invalid) {\n      return;\n    }\n\n    const login: any = {\n      email: this.email,\n      password: this.password,\n    };\n\n    Swal.fire({\n      title: 'Loading',\n      text: 'verifying your data',\n      icon: 'info',\n      showConfirmButton: false,\n      willOpen: () => {\n        Swal.showLoading();\n      },\n    });\n\n    \n    this.authServise.verifyLogin(login).subscribe(\n      (resp: any) => {\n        if (this.rememberMe) {\n          localStorage.setItem('email', this.email);\n        }\n\n        Swal.fire({\n          icon: 'success',\n          title: resp.message,\n          showConfirmButton: false,\n          timer: 1500,\n          willClose: () => {\n            this.router.navigateByUrl('/home');\n          },\n        });\n      },\n      (err) => {\n        Swal.fire(\n          'error',\n          !err.error.message\n            ? 'Something its wrong'\n            : err.error.message,\n          'error'\n        );\n      }\n    );\n  }\n\n  rememberMeChange(): void {\n    if (!this.rememberMe) {\n      localStorage.removeItem('email');\n    }\n    localStorage.setItem('email', this.email);\n  }\n}\n","<div class=\"limiter animated fadeInRight\">\n  <div class=\"container-login100\">\n    <div class=\"wrap-login100 p-t-50 p-b-90\">\n\n      <!-- inicio form -->\n      <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\" class=\"login100-form validate-form flex-sb flex-w fadeInLeft\">\n\n        <img src=\"../../../assets/images/task_logo.png\" alt=\"task_logo\" class=\"img-fluid\">\n\n        <!-- Mensaje de error  -->\n        <span *ngIf=\"f.submitted && f.controls['email'].errors\" class=\"text-danger animated fadeIn\">the mail is\n          mandatory</span>\n        <div class=\"wrap-input100 m-b-16\">\n          <input class=\"input100\" type=\"email\" name=\"email\" [(ngModel)]=\"email\" (keyup.enter)=\"onSubmit(f)\"\n            placeholder=\"Email\" required>\n\n          <span class=\"focus-input100\"></span>\n        </div>\n\n        <!-- Mensaje de error  -->\n        <span *ngIf=\"f.submitted && f.controls['password'].errors\" class=\"text-danger animated fadeIn\">the password must\n          have at least 6 letters</span>\n        <div class=\"wrap-input100 m-b-16\" data-validate=\"Password is required\">\n          <input class=\"input100\" type=\"password\" name=\"password\" [(ngModel)]=\"password\" (keyup.enter)=\"onSubmit(f)\"\n            placeholder=\"Password\" minlength=\"6\" required>\n          <span class=\"focus-input100\"></span>\n        </div>\n\n        <!-- Recordar uduario -->\n        <div class=\"flex-sb-m w-full p-t-3 p-b-24\">\n          <div class=\"contact100-form-checkbox\">\n            <input class=\"input-checkbox100\" [(ngModel)]=\"rememberMe\" (change)=rememberMeChange() id=\"ckb1\"\n              type=\"checkbox\" name=\"remember-me\">\n            <label class=\"label-checkbox100\" for=\"ckb1\">\n              Remember my email\n            </label>\n          </div>\n        </div>\n\n\n        <div class=\"container-login100-form-btn m-t-17\">\n          <button class=\"login100-form-btn\" type=\"submit\">\n            log in\n          </button>\n        </div>\n\n        <div class=\"container-login100-form-btn m-t-17\">\n          <button class=\"login100-form-btn facebook\" type=\"submit\">\n            <i class=\"fa fa-facebook-f m-r-60\"></i>log in with facebook\n          </button>\n        </div>\n\n        <!-- recuperar datos -->\n        <div id=\"container_options\">\n          <a routerLink=\"/signin\" class=\"txt1\">\n            Sign in\n          </a>\n          <a routerLink=\"/recovery\" class=\"txt1\">\n            ¿Forgot your password?\n          </a>\n        </div>\n      </form>\n      <!-- fin form -->\n\n    </div>\n  </div>\n</div>\ns\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { environment } from '../../environments/environment.prod';\n\nconst base_url: String = environment.base_url;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectService {\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  createProject(project: any): Observable<any> {\n    const token = this.authService.token;\n    return this.http.post(`${base_url}project/createProject`, project, {\n      headers: {\n        'x-token': token,\n      },\n    });\n  }\n\n  getProjects(): Observable<any> {\n    const token = this.authService.token;\n    return this.http.get(`${base_url}project/getProjects`, {\n      headers: {\n        'x-token': token,\n      },\n    });\n  }\n}\n","export const environment = {\n  production: true,\n  base_url: 'http://https://task-definition.herokuapp.com/api/',\n};\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { tap, map, catchError } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from '../../environments/environment.prod';\nimport { User } from '../models/user.model';\n\nconst base_url: String = environment.base_url;\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  userLoggedIn: User;\n  token: string;\n  constructor(private http: HttpClient) {}\n\n  verifyLogin(login: any): Observable<any> {\n    return this.http.post(`${base_url}auth/login`, login).pipe(\n      tap((resp) => {\n        localStorage.setItem('token', resp.token);\n      })\n    );\n  }\n\n  signIn(signIn): Observable<any> {\n    return this.http.post(`${base_url}auth/signIn`, signIn);\n  }\n\n  recoveryData(email: string): Observable<any> {\n    return this.http\n      .post(`${base_url}auth/recoveryData`, { email })\n      .pipe(map((resp: any) => resp.ok));\n  }\n\n  validarToken(): Observable<boolean> {\n    const token: string = this.readToken();\n    return this.http\n      .get(`${base_url}auth/renewToken`, {\n        headers: {\n          'x-token': token,\n        },\n      })\n      .pipe(\n        tap((resp: any) => {\n          const { email, password, _id } = resp.user;\n\n          this.userLoggedIn = new User(email, password, _id, resp.token);\n\n          localStorage.setItem('token', resp.token);\n        }),\n        map((resp) => true),\n        catchError((error) => {\n          console.log(error);\n          return of(false);\n        })\n      );\n  }\n\n  readToken(): string {\n    this.token = localStorage.getItem('token')\n      ? localStorage.getItem('token')\n      : '';\n    return this.token;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './auth/login/login.component';\nimport { RecoveryComponent } from './auth/recovery/recovery.component';\nimport { SigninComponent } from './auth/signin/signin.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { HomeComponent } from './pages/home/home.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'recovery', component: RecoveryComponent },\n  { path: 'signin', component: SigninComponent },\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n  // { path: '**', component: NopagefoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}